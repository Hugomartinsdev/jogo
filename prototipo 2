#HTML#
*TELA INICIAL*
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <script src='main.js'></script>
</head>
<body style="background-color: black;">

    <div style="color: white;"><p>&: Símbolo que representa o jogador. <br>
        *: Símbolo que representa uma parede, o jogador ao se movimentar não pode passar pela parede. <br>
        @: Símbolo que representa a chave para abrir a porta para finalizar a fase, a porta abre no momento que o jogador interage com a chave. <br>
        D: Símbolo que representa a porta fechada. <br>
        =: Símbolo que representa a porta aberta quando o jogador interage com a chave. <br>
        O: Símbolo que representa um botão que o usuário pode interagir, o botão fica no chão e o jogador deve ficar em cima dele para poder interagir. <br>
        #: Símbolo que representa um espinho. A fase é reiniciada quando o jogador toca no espinho, caso a fase seja reiniciada três vezes, o jogo volta para o menu principal. <br>
        >: Símbolo que representa um teletransporte. O teletransporte sempre deve vir em pares, quando o jogador toca em um ele é transportado para o outro e vice-versa.</p><br></div>
    <center><a href="telainicio.html"><p style="color: white">PARA VOLTAR AO MENU</p></a></center>
</body>
</html>


*TUTORIAL*
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <script src='main.js'></script>
</head>
<body style="background-color: black;">

    <div style="color: white;"><p>&: Símbolo que representa o jogador. <br>
        *: Símbolo que representa uma parede, o jogador ao se movimentar não pode passar pela parede. <br>
        @: Símbolo que representa a chave para abrir a porta para finalizar a fase, a porta abre no momento que o jogador interage com a chave. <br>
        D: Símbolo que representa a porta fechada. <br>
        =: Símbolo que representa a porta aberta quando o jogador interage com a chave. <br>
        O: Símbolo que representa um botão que o usuário pode interagir, o botão fica no chão e o jogador deve ficar em cima dele para poder interagir. <br>
        #: Símbolo que representa um espinho. A fase é reiniciada quando o jogador toca no espinho, caso a fase seja reiniciada três vezes, o jogo volta para o menu principal. <br>
        >: Símbolo que representa um teletransporte. O teletransporte sempre deve vir em pares, quando o jogador toca em um ele é transportado para o outro e vice-versa.</p><br></div>
        <a href="telainicio.html"></a><center><p style="color: white;">PARA VOLTAO AO MENU</p></center>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Galaxy Animation</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <style>
        canvas {
            width: 100%;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
        }
    </style>
</head>
<body>
    <canvas></canvas>
    <script>
        const canvas = document.querySelector('canvas');
        const ctx = canvas.getContext('2d');
        const stars = [];
        const numStars = 500;

        // Cria as estrelas
        for (let i = 0; i < numStars; i++) {
            stars.push({
                x: Math.random() * canvas.width,
                y: Math.random() * canvas.height,
                radius: Math.random() * 1.5 + 0.5,
                alpha: Math.random() * 0.5 + 0.5,
                speed: Math.random() * 2 + 0.5
            });
        }

        // Desenha a animação
        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
            ctx.beginPath();
            for (let i = 0; i < numStars; i++) {
                const star = stars[i];
                ctx.moveTo(star.x, star.y);
                ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);
            }
            ctx.fill();
            update();
        }

        // Atualiza a posição das estrelas
        function update() {
            for (let i = 0; i < numStars; i++) {
                const star = stars[i];
                star.x += star.speed;
                if (star.x > canvas.width + star.radius) {
                    star.x = -star.radius;
                }
            }
        }

        // Chama a função draw a cada frame da animação
        function loop() {
            requestAnimationFrame(loop);
            draw();
        }

        // Inicia a animação
        loop();
    </script>
</body>
</html>
